<script>
    import ChallengeDetail from "./ChallengeDetail.svelte";
    import { onMount } from 'svelte';
    import ClassDetail from "./ClassDetail.svelte";
    import Introduction from "./Introduction.svelte";

    let challenges;
    let classes;
    export let chosenChallenge;
    export let chosenClass;
    let darkMode = false;

    onMount(async () => {
        await fetchChallenges();
        await fetchClasses();
        const storedTheme = localStorage.getItem('theme');
        darkMode = storedTheme === 'dark';
        setTheme(darkMode);
    });

    const difficultyOrder = { 'easy': 1, 'medium': 2, 'hard': 3 };

    async function fetchChallenges() {
        // ... (rest of the fetchChallenges function remains the same)
    }

    async function fetchClasses() {
        // ... (rest of the fetchClasses function remains the same)
    }

    function difficulty_background(d) {
        return d === "easy" ? "bg-success" : d === "medium" ? "bg-warning" : "bg-danger";
    }

    function toggleTheme() {
        darkMode = !darkMode;
        setTheme(darkMode);
    }

    function setTheme(isDark) {
        if (isDark) {
            document.body.classList.add('dark-mode');
            localStorage.setItem('theme', 'dark');
        } else {
            document.body.classList.remove('dark-mode');
            localStorage.setItem('theme', 'light');
        }
    }
</script>

<style>
    :global(body) {
        transition: background-color 0.3s ease, color 0.3s ease;
    }

    :global(body.dark-mode) {
        background-color: #333;
        color: #fff;
    }

    :global(.dark-mode .list-group-item) {
        background-color: #444;
        color: #fff;
        border-color: #555;
    }

    :global(.dark-mode .list-group-item:hover) {
        background-color: #555;
    }

    .theme-toggle {
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 1000;
    }
</style>

<button class="btn btn-outline-primary theme-toggle" on:click={toggleTheme}>
    {darkMode ? '‚òÄÔ∏è Light Mode' : 'üåô Dark Mode'}
</button>

<div class="row">
    <div class="col-3 mb-2">
        <div class="p-3" style="background-color: {darkMode ? '#444' : '#f8f9fa'}; border-radius: 8px;">
            <!-- ... (rest of the component structure remains the same) ... -->
        </div>
    </div>

    <div class="col-9">
        {#if chosenChallenge !== undefined}
            <ChallengeDetail bind:challenge={chosenChallenge}/>
        {:else if chosenClass !== undefined}
            <ClassDetail bind:curClass={chosenClass}/>
        {:else}
            <Introduction/>
        {/if}
    </div>
</div>